# Generated by Home Manager.
# See https://sw.kovidgoyal.net/kitty/conf.html

include ./dracula.conf

font_family      Victor Mono Light
bold_font        Victor Mono Medium
italic_font      Victor Mono Light Italic
bold_italic_font Victor Mono Medium Italic

# font_family      Iosevka Custom Extended Light
# bold_font        Iosevka Custom Extended Medium
# italic_font      Iosevka Custom Extended Light  Italic
# bold_italic_font Iosevka Custom Extended Medium Italic

font_size 12.5

disable_ligatures cursor
font_features VictorMono-Light +ss06 +ss03 +ss01 +ss07
font_features VictorMono-Medium +ss06 +ss03 +ss01
font_features VictorMono-MediumItalic +ss06 +ss03 +ss01
font_features VictorMono-Italic +ss06 +ss03 +ss01

enable_audio_bell no
visual_bell_duration 0.1

scrollback_lines 100000
scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER
scrollback_pager_history_size 100

update_check_interval 0

window_border_width 0.0pt
inactive_text_alpha 0.9
resize_draw_strategy size

tab_bar_edge top
tab_bar_style powerline

macos_option_as_alt yes
macos_show_window_title_in menubar

shell_integration disabled

# enable splitting of windows:
enabled_layouts splits:split_axis=horizontal

# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other
map f5 launch --location=hsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
map f6 launch --location=vsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side if the existing window is wide or
# one above the other if the existing window is tall.
map f4 launch --location=split

# Rotate the current split, chaging its split axis from vertical to
# horizontal or vice versa
map f7 layout_action rotate

# Move the active window in the indicated direction
map shift+up move_window up
map shift+left move_window left
map shift+right move_window right
map shift+down move_window down

# Move the active window to the indicated screen edge
map ctrl+shift+up layout_action move_to_screen_edge top
map ctrl+shift+left layout_action move_to_screen_edge left
map ctrl+shift+right layout_action move_to_screen_edge right
map ctrl+shift+down layout_action move_to_screen_edge bottom

# Switch focus to the neighboring window in the indicated direction
map ctrl+left neighboring_window left
map ctrl+right neighboring_window right
map ctrl+up neighboring_window up
map ctrl+down neighboring_window down


